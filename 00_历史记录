history 命令
    位置  .bash_history
    选项
        -a  追加  -d #  删除指定命令   -c:  清除所有命令   -w: 把当前记录写入 .bash_history
    调用历史命令
        !!: 执行上一条命令
        !STRING:执行上一条以STRING开头的命令
        !STRING:p:打印上一条以STRING开头的命令，但不执行
        !?STRING:执行上一条含有STRING的命令
        !NUMBER:执行第NUMBER条历史记录中的命令
        !$: 上一条命令的最后一个参数    ESC + .

忽略空白开头或者重复的命令
    $vi .bashrc
    HISTCONTROL=ignoreboth   <===space, dups  <---space start, duplicates

PS1变量
    在/etc/bashrc 或者 ~/.bashrc 中定义
        PS1='\h:\W \u\$ '
    
    \d: 日期，格式为 weekday month date, eg., "Mon Aug 1"
    \H: 完整主机名
    \h: 主机的第一个名字
    \t: 24小时格式时间, HH:MM:SS
    \T: 12小时格式时间
    \A: 24小时格式时间，HH:MM
    \u: 当前用户的账号名称
    \v: BASH版本信息
    \w: 显示完整路径，家目录以~代替
    \W: 利用basename取得工作目录名称，所以只会列岛最后一个目录
    \#: 执行的第几个命令
    \$: 提示符，如#--->root,  $--->普通用户

生成数列
    seq:
        seq [OPTION]... LAST
        seq [OPTION]... FIRST LAST
        seq [OPTION]... FIRST INCREMENT LAST
        OPTIONS:
            -f: 指定宽度
            -s | --separator=STRING: 指定分隔符
            -w: --equal-width, 统一宽度，即所有的元素宽度相同，以最宽的为标准，不足的前面用 0 补齐
 
        例子:
        $seq -s',' -f "%3g" 1 40 200  <==  1, 41, 81,121,161
        $seq -s',' -f "%03g" 1 40 200 <== 001,041,081,121,161    <=======    
        seq -s',' 1 2 10 <====1,3,5,7,9
        $seq -s' ' -w 1 4 20 <===01 05 09 13 17
        
    $echo {start..end..increment}  | echo {start..end}
        例子
        $echo {1..10..2}    <===1 3 5 7 9
        $echo {01..10..2}  | echo {01..10..02}   <===01 03 05 07 09
        $echo {01..10}  <==01 02 03 04 05 06 07 08 09 10
        $echo {1..10}   <===1 2 3 4 5 6 7 8 9 10
        注意:
            不能只传入一个参数！！！
    
    for循环
        $for i in {001..010}; do echo $i; done  <===01 02 03 04 05 06 07 08 09 10
        $for i in {1..10}; do echo $i; done     <===1 2 3 4 5 6 7 8 9 10
